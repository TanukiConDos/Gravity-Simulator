digraph "Engine/Physic/SolverInterface.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="Engine/Physic/SolverInterface.h",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Define una interfaz para implementar métodos de resolución de la simulación física."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Engine/Physic/BruteForce\lSolver.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_brute_force_solver_8h.html",tooltip="Implementa un solver de simulación física usando el enfoque de fuerza bruta."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Application/GravitySimulator.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_gravity_simulator_8cpp.html",tooltip=" "];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Engine/Physic/BruteForce\lSolver.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_brute_force_solver_8cpp.html",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Engine/Physic/OctTreeSolver.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_oct_tree_solver_8h.html",tooltip="Implementa un solver de simulación física utilizando un árbol octal para resolver las interacciones entre ob..."];
  Node5 -> Node3 [id="edge5_Node000005_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node6 [id="edge6_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="Engine/Physic/OctTreeSolver.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_oct_tree_solver_8cpp.html",tooltip=" "];
  Node1 -> Node7 [id="edge7_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="Engine/Physic/PhysicSystem.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_physic_system_8h.html",tooltip="Gestiona la simulación física utilizando un algoritmo de detección de colisiones y un solver para actualizar ..."];
  Node7 -> Node8 [id="edge8_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="Application/GravitySimulator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_gravity_simulator_8h.html",tooltip="Header para la simulación de gravedad."];
  Node8 -> Node3 [id="edge9_Node000008_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node9 [id="edge10_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Application/State.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_state_8cpp.html",tooltip=" "];
  Node8 -> Node10 [id="edge11_Node000008_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="main.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$main_8cpp.html",tooltip=" "];
  Node7 -> Node2 [id="edge12_Node000007_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node11 [id="edge13_Node000007_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="Engine/Physic/OctTree.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_oct_tree_8h.html",tooltip="Define la clase OctTree para gestionar la partición espacial de objetos físicos mediante un árbol octal."];
  Node11 -> Node3 [id="edge14_Node000011_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node12 [id="edge15_Node000011_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="Engine/Physic/OctTree.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_oct_tree_8cpp.html",tooltip=" "];
  Node11 -> Node13 [id="edge16_Node000011_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="Engine/Physic/OctTreeCollision\lDetection.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_oct_tree_collision_detection_8h.html",tooltip="Implementa una detección de colisiones utilizando un árbol octal (OctTree) para optimizar la simulación."];
  Node13 -> Node3 [id="edge17_Node000013_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node14 [id="edge18_Node000013_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="Engine/Physic/OctTreeCollision\lDetection.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_oct_tree_collision_detection_8cpp.html",tooltip=" "];
  Node11 -> Node5 [id="edge19_Node000011_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node15 [id="edge20_Node000007_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="Engine/Physic/PhysicSystem.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_physic_system_8cpp.html",tooltip=" "];
  Node1 -> Node16 [id="edge21_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="Engine/Physic/SolverInterface.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_solver_interface_8cpp.html",tooltip=" "];
}
